@page "/settings"

@using Transformer_Forecasting_Web.ModelExecution
@inject ModelExecutor modelExecution

<PageTitle>Settings</PageTitle>
<MudStack>
@*    <MudPaper Elevation="3">
        <MudText Class="pa-2" Typo="Typo.subtitle1"> LFP Model </MudText>
        <MudGrid Class="pa-8">
            <MudItem md="3">
                <MudText>Hyperparameters for LFP model</MudText>
                <MudPaper Class="pa-2" Outlined="true">
                     <MudGrid>
                         <MudItem Class="p-3" xs="6">
                             <MudContainer MaxWidth="MaxWidth.ExtraExtraLarge" Class="pl-12">
                                <MudSwitch Class="align-center justify-center mud-width-full p-1" Style="width: 105px; height: 38px;" @bind-Checked="@HUFL"Color="Color.Primary"Label="HUFL"/>
                                <MudSwitch Class="align-center justify-center mud-width-full p-1" Style="width: 105px; height: 38px;" @bind-Checked="@MUFL"Color="Color.Primary"Label="MUFL"/>
                                <MudSwitch Class="align-center justify-center mud-width-full p-1" Style="width: 105px; height: 38px;" @bind-Checked="@LUFL"Color="Color.Primary"Label="LUFL"/>
                            </MudContainer>
                         </MudItem>
                         <MudItem Class="p-3" xs="6">
                             <MudContainer MaxWidth="MaxWidth.ExtraExtraLarge" Class="pl-12">
                                <MudSwitch Class="d-flex align-center justify-center mud-width-full p-1" Style="width: 105px; height: 38px;" @bind-Checked="@HULL" Color="Color.Primary" Label="HULL"/>
                                <MudSwitch Class="d-flex align-center justify-center mud-width-full p-1" Style="width: 105px; height: 38px;" @bind-Checked="@MULL" Color="Color.Primary" Label="MULL"/>
                                <MudSwitch Class="d-flex align-center justify-center mud-width-full p-1" Style="width: 105px; height: 38px;" @bind-Checked="@LULL" Color="Color.Primary" Label="LULL"/>
                            </MudContainer>
                         </MudItem>
                         <MudItem Class="pt-2" xs="12">
                            <MudPaper Class="d-flex align-center justify-center mud-width-full" Elevation="0">
                                <MudButton Class="align-content-center" Variant="Variant.Outlined" Color="Color.Primary" @onclick="@(() => resetLFP())"> Reset to Default</MudButton>
                            </MudPaper>
                         </MudItem>
                    </MudGrid>
                </MudPaper>
            </MudItem>
            <MudItem md="3">
                <MudPaper Class="pt-2" Elevation="0">
                        <MudText>Learning Rate</MudText>
                        <MudSelect T="double" Class="pa-2" @bind-Value="@lrSelect" Variant="Variant.Outlined">
                            <MudSelectItem Value="@(0.0005)">Recommended: 0.0005 </MudSelectItem>                             
                            <MudSelectItem Value="@(0.01)"/>
                            <MudSelectItem Value="@(0.001)"/>
                            <MudSelectItem Value="@(0.0001)"/>
                            <MudSelectItem Value="@(0.0001)"/>
                        </MudSelect>
                </MudPaper>
            </MudItem>
        </MudGrid>
        </MudPaper>*@
        <MudPaper Elevation="3">
        <MudText Class="pa-3" Typo="Typo.subtitle1">Date Time Prediction Model</MudText>
            <MudGrid Class="pa-8" Justify="Justify.FlexStart">
                <MudItem md="3">
                    <MudText>Hyperparameters for DTP</MudText>
                    <MudPaper Class="pa-2" Outlined="true">
                         <MudGrid>
                             <MudItem Class="p-3" xs="6">
                                 <MudContainer MaxWidth="MaxWidth.ExtraExtraLarge" Class="pl-12">
                                    <MudSwitch Class="align-center justify-center mud-width-full p-1" Style="width: 105px; height: 38px;" @bind-Checked="@SwitchMonth"Color="Color.Primary"Label="Month"/>
                                    <MudSwitch Class="align-center justify-center mud-width-full p-1" Style="width: 105px; height: 38px;" @bind-Checked="@SwitchDay"Color="Color.Primary"Label="Day"/>
                                    <MudSwitch Class="d-flex align-center justify-center mud-width-full p-1" Style="width: 105px; height: 38px;" @bind-Checked="@SwitchHour" Color="Color.Primary" Label="Hour"/>
                                    <MudSwitch Class="d-flex align-center justify-center mud-width-full p-1" Style="width: 105px; height: 38px;" @bind-Checked="@SwitchQuarter" Color="Color.Primary" Label="Quarter"/>
                                </MudContainer>
                             </MudItem>
                             <MudItem Class="p-3" xs="6">
                                 <MudContainer MaxWidth="MaxWidth.ExtraExtraLarge" Class="pl-12">
                                    <MudSwitch Class="align-center justify-center mud-width-full p-1" Style="width: 105px; height: 38px;" @bind-Checked="@SwitchYear"Color="Color.Primary"Label="Year"/>
                                    <MudSwitch Class="d-flex align-center justify-center mud-width-full p-1" Style="width: 105px; height: 38px;" @bind-Checked="@SwitchWeekday" Color="Color.Primary" Label="Weekday"/>
                                    <MudSwitch Class="d-flex align-center justify-center mud-width-full p-1 text-nowrap" Style="width: 105px; height: 38px;" @bind-Checked="@SwitchWOY" Color="Color.Primary" Label="W/O Year"/>
                                </MudContainer>
                             </MudItem>
                             <MudItem Class="pt-2" xs="12">
                                <MudPaper Class="d-flex align-center justify-center mud-width-full" Elevation="0">
                                    <MudButton Class="align-content-center" Variant="Variant.Outlined" Color="Color.Primary" @onclick="@(() => resetDTP())"> Reset to Default</MudButton>
                                </MudPaper>
                             </MudItem>
                        </MudGrid>
                    </MudPaper>
                </MudItem>
            <MudItem md="3">
                <MudPaper Class="pb-8 pt-2" Elevation="0">
                    <MudText>Predict Forward Amount</MudText>
                    <MudContainer Class="pl-2 pt-2">
                        <MudTextField T="int" @bind-Value="HoursToPredict" Label="Hours" HelperText="Recommended: 24" Variant="Variant.Outlined" Style="width: 270.75px; height: 56px;"/>
                    </MudContainer>
                </MudPaper>
                @*<MudText Class="pb-3"> Hourly prediction mode</MudText>
                <MudContainer Class="pl-2">
                    <MudPaper Class="pa-2" Outlined="true" Style="width: 270.75px; height: 56px;">
                            <MudSwitch Class="d-flex align-center justify-center mud-width-full pl-8" Style="width: 105px; height: 38px;" @bind-Checked="@DtpSwitch" Color="Color.Primary"> @(hourlyModeSwitch(DtpSwitch))</MudSwitch>
                    </MudPaper>
                </MudContainer>*@
            </MudItem>
        </MudGrid>
        </MudPaper>
        <MudContainer Elevation="3" Class="d-flex align-center justify-content-center">
            <MudButton Disabled="@_loading" Variant="Variant.Outlined" Color="Color.Primary" @onclick="@(() => Loading())">
        @if (_loading)
        {
            <MudProgressCircular Class="ms-n1" Size="Size.Small" Indeterminate="true" />
            <MudText Class="ms-2">Saving</MudText>
        }
        else
        {
            <MudText>Save to Json</MudText>
        }
        </MudButton>
        </MudContainer>
</MudStack>

@code {
    //LFP model hyperparameters 
    //public bool HUFL { get; set; } = true;
    //public bool MUFL { get; set; } = true;
    //public bool LUFL { get; set; } = true;
    //public bool HULL { get; set; } = false;
    //public bool MULL { get; set; } = false;
    //public bool LULL { get; set; } = false;

    //DTP model hyperparameters
    public bool SwitchYear { get; set; } = false;
    public bool SwitchMonth { get; set; } = true;
    public bool SwitchDay { get; set; } = true;
    public bool SwitchHour { get; set; } = true;
    public bool SwitchWeekday { get; set; } = false;
    public bool SwitchWOY { get; set; } = false;
    public bool SwitchQuarter { get; set; } = true;

    protected override async Task OnInitializedAsync()
    {
        //setSwitchValuesToJsonValues();
    }

    void setSwitchValuesToJsonValues()
    {
        List<Object> jsonValues = GlobalJsonBuilder.jsonBuilder.ReadJson();
        // hjælp
        Console.WriteLine();

    }

    //void resetLFP()
    //{
    //    HUFL = true;
    //    MUFL = true;
    //    LUFL = true;
    //    HULL = false;
    //    MULL = false;
    //    LULL = false;
    //}

    void resetDTP()
    {
        SwitchYear = false;
        SwitchMonth = true;
        SwitchDay = true;
        SwitchHour = true;
        SwitchWeekday = false;
        SwitchWOY = false;
        SwitchQuarter = true;
    }

    int HoursToPredict = 24;

    double lrSelect = 0.0005; 

    public bool DtpSwitch { get; set; } = false;

    private string hourlyModeSwitch (bool hourlyModeBool)
    {
        if (hourlyModeBool == true)
            return "On";
        else
            return "Off";
    }

    void SaveSettingsToJSON()
    {
        // Ugly but i have to do this xd
        GlobalJsonBuilder.jsonBuilder.ResetParam();

        //GlobalJsonBuilder.jsonBuilder.AddParam(("HUFL", HUFL));
        //GlobalJsonBuilder.jsonBuilder.AddParam(("MUFL", MUFL));
        //GlobalJsonBuilder.jsonBuilder.AddParam(("LUFL", LUFL));
        //GlobalJsonBuilder.jsonBuilder.AddParam(("HULL", HULL));
        //GlobalJsonBuilder.jsonBuilder.AddParam(("MULL", MULL));
        //GlobalJsonBuilder.jsonBuilder.AddParam(("LULL", LULL));
        //GlobalJsonBuilder.jsonBuilder.AddParam(("LR", lrSelect));

        GlobalJsonBuilder.jsonBuilder.AddParam(("SwitchYear", SwitchYear));
        GlobalJsonBuilder.jsonBuilder.AddParam(("SwitchMonth", SwitchMonth));
        GlobalJsonBuilder.jsonBuilder.AddParam(("SwitchDay", SwitchDay));
        GlobalJsonBuilder.jsonBuilder.AddParam(("SwitchHour", SwitchHour));
        GlobalJsonBuilder.jsonBuilder.AddParam(("SwitchWeekday", SwitchWeekday));
        GlobalJsonBuilder.jsonBuilder.AddParam(("SwitchWOY", SwitchWOY));
        GlobalJsonBuilder.jsonBuilder.AddParam(("SwitchQuarter", SwitchQuarter));
        GlobalJsonBuilder.jsonBuilder.AddParam(("DtpSwitch", DtpSwitch));

        GlobalJsonBuilder.jsonBuilder.AddParam(("HoursToPredict", HoursToPredict));

        GlobalJsonBuilder.jsonBuilder.BuildJson();
    }

    private bool _loading = false;

    async Task Loading()
    {
        _loading = true;
        SaveSettingsToJSON();
        await Task.Delay(500);
        _loading = false;
        UpdateOutlierRemoval();
    }

    void UpdateOutlierRemoval()
    {
        // updates the linear outlier detection according to the updated json
        string arguments = string.Format("{0}", @"./ModelExecution/TFmain/DataHandling/removeOutliers.py");
        modelExecution.RunPythonScript(arguments);
    }
}
